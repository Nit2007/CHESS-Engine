#include "defs.h"
#include "struct.h"

const int PawnTable[64] = {
     0,    0,    0,    0,    0,    0,    0,    0,
    10,   10,    0,  -10,  -10,    0,   10,   10,
     5,    0,    0,    5,    5,    0,    0,    5,
     0,    0,   10,   20,   20,   10,    0,    0,
     5,    5,    5,   10,   10,    5,    5,    5,
    10,   10,   10,   20,   20,   10,   10,   10,
    20,   20,   20,   30,   30,   20,   20,   20,
     0,    0,    0,    0,    0,    0,    0,    0
};

const int KnightTable[64] = {
     0,  -10,    0,    0,    0,    0,  -10,    0,
     0,    0,    0,    5,    5,    0,    0,    0,
     0,    0,   10,   10,   10,   10,    0,    0,
     0,    0,   10,   20,   20,   10,    5,    0,
     5,   10,   15,   20,   20,   15,   10,    5,
     5,   10,   10,   20,   20,   10,   10,    5,
     0,    0,    5,   10,   10,    5,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0
};

const int BishopTable[64] = {
     0,    0,  -10,    0,    0,  -10,    0,    0,
     0,    0,    0,   10,   10,    0,    0,    0,
     0,    0,   10,   15,   15,   10,    0,    0,
     0,   10,   15,   20,   20,   15,   10,    0,
     0,   10,   15,   20,   20,   15,   10,    0,
     0,    0,   10,   15,   15,   10,    0,    0,
     0,    0,    0,   10,   10,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0
};

const int RookTable[64] = {
     0,    0,    5,   10,   10,    5,    0,    0,
     0,    0,    5,   10,   10,    5,    0,    0,
     0,    0,    5,   10,   10,    5,    0,    0,
     0,    0,    5,   10,   10,    5,    0,    0,
     0,    0,    5,   10,   10,    5,    0,    0,
     0,    0,    5,   10,   10,    5,    0,    0,
    25,   25,   25,   25,   25,   25,   25,   25,
     0,    0,    5,   10,   10,    5,    0,    0
};

const int KingE[64] = {
   -50,  -10,    0,    0,    0,    0,  -10,  -50,
   -10,    0,   10,   10,   10,   10,    0,  -10,
     0,   10,   20,   20,   20,   20,   10,    0,
     0,   10,   20,   40,   40,   20,   10,    0,
     0,   10,   20,   40,   40,   20,   10,    0,
     0,   10,   20,   20,   20,   20,   10,    0,
   -10,    0,   10,   10,   10,   10,    0,  -10,
   -50,  -10,    0,    0,    0,    0,  -10,  -50
};

const int KingO[64] = {
     0,    5,    5,  -10,  -10,    0,   10,    5,
   -30,  -30,  -30,  -30,  -30,  -30,  -30,  -30,
   -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
   -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
   -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
   -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
   -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70,
   -70,  -70,  -70,  -70,  -70,  -70,  -70,  -70
};

const int QueenTable[64] = {
   -20, -10, -10,  -5,  -5, -10, -10, -20,
   -10,   0,   0,   0,   0,   0,   0, -10,
   -10,   0,   5,   5,   5,   5,   0, -10,
    -5,   0,   5,   5,   5,   5,   0,  -5,
     0,   0,   5,   5,   5,   5,   0,  -5,
   -10,   5,   5,   5,   5,   5,   0, -10,
   -10,   0,   5,   0,   0,   0,   0, -10,
   -20, -10, -10,  -5,  -5, -10, -10, -20
};

const int Mirror64[64] = {
    56, 57, 58, 59, 60, 61, 62, 63,   // a8–h8
    48, 49, 50, 51, 52, 53, 54, 55,   // a7–h7
    40, 41, 42, 43, 44, 45, 46, 47,   // a6–h6
    32, 33, 34, 35, 36, 37, 38, 39,   // a5–h5
    24, 25, 26, 27, 28, 29, 30, 31,   // a4–h4
    16, 17, 18, 19, 20, 21, 22, 23,   // a3–h3
     8,  9, 10, 11, 12, 13, 14, 15,   // a2–h2
     0,  1,  2,  3,  4,  5,  6,  7    // a1–h1
};
#define Mirror(sq) (Mirror64[sq]);

int EvalPosition(s_board* pos)
{
    return 0;
}

